
import java.util.List;

import org.dom4j.Document;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.dom4j.Node;
import org.dom4j.io.OutputFormat;
import org.dom4j.io.XMLWriter;


public class NodeCreator2 {
	/**
	 * Recursive method to create an element and, if necessary, its parents and siblings
	 * @param document
	 * @param xpath to single element
	 * @param value if null an empty element will be created
	 * @return the created Node
	 */
	private Node addElementToParent(Document document, String xpath, String value) {

		System.out.println("adding Element: " + xpath + " -> " + value);
		
		String elementName = XPathUtils.getChildElementName(xpath);
		String parentXPath = XPathUtils.getParentXPath(xpath);
		Node parentNode = document.selectSingleNode(parentXPath);
		if(parentNode == null) {	
			parentNode = addElementToParent(document, parentXPath, null);
		}
		
		// create younger siblings if needed
		Integer childIndex = XPathUtils.getChildElementIndex(xpath);
		if(childIndex > 1) {
			List<?> nodelist = document.selectNodes(XPathUtils.createPositionXpath(xpath, childIndex));
			// how many to create = (index wanted - existing - 1 to account for the new element we will create)
			int nodesToCreate = childIndex - nodelist.size() - 1;
			for(int i = 0; i < nodesToCreate; i++) {
				((Element)parentNode).addElement(elementName);
			}
		}
		
		// create requested element
		Element created = ((Element)parentNode).addElement(elementName);
		if(null != value) {
			created.addText(value);
		}
		return created;
	}
}
